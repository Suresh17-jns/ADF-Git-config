{
	"name": "Dataflow_Daily_Yosan_Data_Ingestion",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SRC_HONBU_YOSAN_EXCEL_DS",
						"type": "DatasetReference"
					},
					"name": "ReadingHonbuYosanDataFromExcelSheet",
					"description": "Importing Honbu Yosan data from belc_ess_base_storage_account to DB Temp Table"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SINK_HONBU_YOSAN_TEMP_TABLE_DS",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "unpivot1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select2"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "select3"
				},
				{
					"name": "MapDrifted1",
					"description": "Creates an explicit mapping for each drifted column"
				},
				{
					"name": "select4"
				},
				{
					"name": "filter1"
				},
				{
					"name": "derivedColumn3"
				}
			],
			"scriptLines": [
				"parameters{",
				"     ExcelFileNameDF as string ('202407_売上予算【日別】_当初.xlsx')",
				"}",
				"source(output(",
				"          {_c0} as string,",
				"          {_c1} as string,",
				"          {_c2} as string,",
				"          {青果計} as string,",
				"          {海産計} as string,",
				"          {精肉計} as string,",
				"          {デリカ計} as string,",
				"          {卵計} as string,",
				"          {冷凍食品計} as string,",
				"          {生鮮} as string,",
				"          {菓子計} as string,",
				"          {食品計} as string,",
				"          {雑貨計} as string,",
				"          {酒計} as string,",
				"          {グロサリーギフト計} as string,",
				"          {たばこ計} as string,",
				"          {グロサリー} as string,",
				"          {ベーカリー計} as string,",
				"          {催事計} as string,",
				"          {その他} as string,",
				"          {部門合計} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: true,",
				"     rowUrlColumn: 'FileName',",
				"     wildcardPaths:[(concat('Daily Yosan/Daily Uriage Yosan/',$ExcelFileNameDF))]) ~> ReadingHonbuYosanDataFromExcelSheet",
				"select2 unpivot(output(",
				"          BUMON_CODE as string,",
				"          HONBU_YOSAN as string",
				"     ),",
				"     ungroupBy({_c0},",
				"          {_c1},",
				"          YEAR,",
				"          MONTH,",
				"          RECORDS_INGESTOIN_TIME),",
				"     lateral: true,",
				"     ignoreNullPivots: false) ~> unpivot1",
				"select3 derive({_c0} = substring({_c0},1,3),",
				"          {_c1} = substring({_c1},1,2),",
				"          YEAR = substring(FileName,39,4),",
				"          MONTH = substring(FileName,43,2),",
				"          RECORDS_INGESTOIN_TIME = currentTimestamp()) ~> derivedColumn1",
				"derivedColumn3 select(mapColumn(",
				"          {_c0},",
				"          {_c1},",
				"          {青果計},",
				"          {海産計},",
				"          {精肉計},",
				"          {デリカ計},",
				"          {卵計},",
				"          {冷凍食品計},",
				"          {菓子計},",
				"          {食品計},",
				"          {雑貨計},",
				"          {酒計},",
				"          {グロサリーギフト計},",
				"          {たばこ計},",
				"          {ベーカリー計},",
				"          {催事計},",
				"          G01,",
				"          G03,",
				"          G04,",
				"          G05,",
				"          B12,",
				"          B14,",
				"          B06,",
				"          B07,",
				"          B09,",
				"          B13,",
				"          B17,",
				"          B19,",
				"          B16,",
				"          B29,",
				"          YEAR,",
				"          MONTH,",
				"          RECORDS_INGESTOIN_TIME,",
				"          {その他}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"unpivot1 derive(BUMON_CODE = case(\r",
				"    BUMON_CODE == 'G01', 'G01',\r",
				"    BUMON_CODE == 'G03', 'G03',\r",
				"    BUMON_CODE == 'G04', 'G04',\r",
				"    BUMON_CODE == 'G05', 'G05',\r",
				"    BUMON_CODE == 'B12', 'B12',\r",
				"    BUMON_CODE == 'B14', 'B14',\r",
				"    BUMON_CODE == 'B06', 'B06',\r",
				"    BUMON_CODE == 'B07', 'B07',\r",
				"    BUMON_CODE == 'B09', 'B09',\r",
				"    BUMON_CODE == 'B13', 'B13',\r",
				"    BUMON_CODE == 'B17', 'B17',\r",
				"    BUMON_CODE == 'B19', 'B19',\r",
				"    BUMON_CODE == 'B16', 'B16',\r",
				"    BUMON_CODE == 'B29', 'B29',\r",
				"    BUMON_CODE == '青果計', 'G01',\r",
				"    BUMON_CODE == '海産計', 'G03',\r",
				"    BUMON_CODE == '精肉計', 'G04',\r",
				"    BUMON_CODE == 'デリカ計', 'G05',\r",
				"    BUMON_CODE == '卵計', 'B12',\r",
				"    BUMON_CODE == '冷凍食品計', 'B14',\r",
				"    BUMON_CODE == '菓子計', 'B06',\r",
				"    BUMON_CODE == '食品計', 'B07',\r",
				"    BUMON_CODE == '雑貨計', 'B09',\r",
				"    BUMON_CODE == '酒計', 'B13',\r",
				"    BUMON_CODE == 'グロサリーギフト計', 'B17',\r",
				"    BUMON_CODE == 'たばこ計', 'B19',\r",
				"    BUMON_CODE == 'ベーカリー計', 'B16',\r",
				"    BUMON_CODE == '催事計', 'B29',\r",
				"    BUMON_CODE\r",
				")) ~> derivedColumn2",
				"select4 select(mapColumn(",
				"          {_c0},",
				"          {_c1},",
				"          {青果計},",
				"          {海産計},",
				"          {精肉計},",
				"          {デリカ計},",
				"          {卵計},",
				"          {冷凍食品計},",
				"          {菓子計},",
				"          {食品計},",
				"          {雑貨計},",
				"          {酒計},",
				"          {グロサリーギフト計},",
				"          {たばこ計},",
				"          {ベーカリー計},",
				"          {催事計},",
				"          FileName,",
				"          G01,",
				"          G03,",
				"          G04,",
				"          G05,",
				"          B12,",
				"          B14,",
				"          B06,",
				"          B07,",
				"          B09,",
				"          B13,",
				"          B17,",
				"          B19,",
				"          B16,",
				"          B29,",
				"          {その他}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"ReadingHonbuYosanDataFromExcelSheet derive(G01 = toString(byName('G01')),",
				"          G03 = toString(byName('G03')),",
				"          G04 = toString(byName('G04')),",
				"          G05 = toString(byName('G05')),",
				"          B12 = toString(byName('B12')),",
				"          B14 = toString(byName('B14')),",
				"          B06 = toString(byName('B06')),",
				"          B07 = toString(byName('B07')),",
				"          B09 = toString(byName('B09')),",
				"          B13 = toString(byName('B13')),",
				"          B17 = toString(byName('B17')),",
				"          B19 = toString(byName('B19')),",
				"          B16 = toString(byName('B16')),",
				"          B29 = toString(byName('B29'))) ~> MapDrifted1",
				"MapDrifted1 select(mapColumn(",
				"          {_c0},",
				"          {_c1},",
				"          {_c2},",
				"          {青果計},",
				"          {海産計},",
				"          {精肉計},",
				"          {デリカ計},",
				"          {卵計},",
				"          {冷凍食品計},",
				"          {生鮮},",
				"          {菓子計},",
				"          {食品計},",
				"          {雑貨計},",
				"          {酒計},",
				"          {グロサリーギフト計},",
				"          {たばこ計},",
				"          {ベーカリー計},",
				"          {催事計},",
				"          {部門合計},",
				"          FileName,",
				"          G01,",
				"          G03,",
				"          G04,",
				"          G05,",
				"          B12,",
				"          B14,",
				"          B06,",
				"          B07,",
				"          B09,",
				"          B13,",
				"          B17,",
				"          B19,",
				"          B16,",
				"          B29,",
				"          {その他}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select4",
				"derivedColumn2 filter(!isNull(HONBU_YOSAN)) ~> filter1",
				"derivedColumn1 derive({_c1} = concat(YEAR, MONTH,{_c1})) ~> derivedColumn3",
				"filter1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          year as string,",
				"          month as string,",
				"          date as string,",
				"          store_code as string,",
				"          department_code as string,",
				"          honbu_yosan as long,",
				"          import_dt as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          year = YEAR,",
				"          month = MONTH,",
				"          date = {_c1},",
				"          store_code = {_c0},",
				"          department_code = BUMON_CODE,",
				"          honbu_yosan = HONBU_YOSAN,",
				"          import_dt = RECORDS_INGESTOIN_TIME",
				"     )) ~> sink1"
			]
		}
	}
}